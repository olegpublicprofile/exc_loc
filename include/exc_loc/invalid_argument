#pragma once

#include "source_location.hpp"

#include <stdexcept>

//------------------------------------------------------------------------------

namespace exc_loc {

//------------------------------------------------------------------------------

class invalid_argument : public std::invalid_argument
{
public:

	invalid_argument(
		const std::string & _what_arg,
		const std::source_location & _loc = std::source_location::current()
	)
		:	std::invalid_argument( _what_arg )
		,	m_source_location{ _loc }
	{
	}

#ifdef EXCLOC_CPP11
	invalid_argument(
		const char* _what_arg,
		const std::source_location & _loc = std::source_location::current()

	)
		:	std::invalid_argument( _what_arg )
		,	m_source_location{ _loc }
	{
	}
#endif

	const std::source_location & source_location() const noexcept
	{
		return m_source_location;
	}

private:

	const std::source_location m_source_location;

};

//------------------------------------------------------------------------------

}
